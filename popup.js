document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("scanButton").addEventListener("click", function() {
      let targetUrl = document.getElementById("targetUrl").value.trim();
      // Validate URL using the URL constructor
      try {
        new URL(targetUrl);
      } catch (error) {
        document.getElementById("result").innerText = "‚ö†Ô∏è Please enter a valid URL.";
        return;
      }
      
      let options = {
        xss: document.getElementById("xssCheckbox").checked,
        storedXss: document.getElementById("storedXssCheckbox").checked,
        lfi: document.getElementById("lfiCheckbox").checked,
        rce: document.getElementById("rceCheckbox").checked,
        nginx: document.getElementById("nginxCheckbox").checked,
        php: document.getElementById("phpCheckbox").checked,
        phpunit: document.getElementById("phpunitCheckbox").checked
    };
  
      let downloadReport = document.getElementById("downloadReportCheckbox").checked;
      document.getElementById("result").innerText = "üîÑ Scanning... Please wait.";
  
      chrome.runtime.sendMessage({ action: "scan", target: targetUrl, options: options }, function(response) {
        let scanResults = response?.message || "‚ùå Error: No response received.";
        document.getElementById("result").innerText = scanResults;
    
        if (downloadReport) {
            let timestamp = new Date().toLocaleString(); // Get readable timestamp
            let formattedReport = `üîç **Report Generated by ExploitScan**  
    üìÖ **Date:** ${timestamp}  
    üåê **Target:** ${targetUrl}  
    ----------------------------------  
    
    ${scanResults
        .split("\n")
        .map(line => line.startsWith("[+]") ? `‚úÖ ${line}` : 
                     line.startsWith("[!]") ? `‚ö†Ô∏è ${line}` : 
                     line.startsWith("‚ùå") ? `‚ùå ${line}` : `‚ûñ ${line}`)
        .join("\n")}
    
    ----------------------------------  
      
    `;
    
            let blob = new Blob([formattedReport], { type: "text/plain" });
            let url = URL.createObjectURL(blob);
            let a = document.createElement("a");
            a.href = url;
            a.download = `scan_report_${new Date().getTime()}.txt`; // Unique filename
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
    });
    ;
    });
  });
  